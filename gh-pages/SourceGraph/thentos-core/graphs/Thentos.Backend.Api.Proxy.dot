digraph "Diagram of: Thentos.Backend.Api.Proxy" {
    node [margin="0.4,0.1"
         ,style=filled];
    subgraph cluster_Class_HasServer {
        graph [label="Class: HasServer"
              ,style="filled,rounded"
              ,fillcolor=rosybrown1];
        subgraph cluster_Class_HasServer_Data_ServiceProxy {
            graph [label="Instance for: ServiceProxy"
                  ,style="filled,rounded"
                  ,fillcolor=slategray1];
            15 [label=route
               ,shape=octagon
               ,fillcolor=bisque
               ,style="filled,bold"];
        }
        17 [label="Unknown Module\nroute"
           ,shape=doubleoctagon
           ,fillcolor=khaki
           ,style="filled,dotted"];
    }
    subgraph cluster_Data_ProxyAdapter {
        graph [label="Data: ProxyAdapter"
              ,style="filled,rounded"
              ,fillcolor=papayawhip];
        1 [label=ProxyAdapter
          ,shape=box3d
          ,fillcolor=goldenrod
          ,style="filled,bold"];
        11 [label=renderError
           ,shape=component
           ,fillcolor=goldenrod
           ,style="filled,bold"];
        12 [label=renderHeader
           ,shape=component
           ,fillcolor=goldenrod
           ,style="filled,bold"];
        13 [label=renderUser
           ,shape=component
           ,fillcolor=goldenrod
           ,style="filled,bold"];
    }
    subgraph cluster_Data_RqMod {
        graph [label="Data: RqMod"
              ,style="filled,rounded"
              ,fillcolor=papayawhip];
        2 [label=RqMod
          ,shape=box3d
          ,fillcolor=goldenrod
          ,style="filled,bold"];
    }
    3 [label=createCustomHeaders
      ,shape=box
      ,fillcolor=goldenrod
      ,style="filled,bold"];
    4 [label=defaultProxyAdapter
      ,shape=box
      ,fillcolor=gold
      ,style="filled,bold"];
    5 [label=defaultRenderUser
      ,shape=box
      ,fillcolor=goldenrod
      ,style="filled,bold"];
    6 [label=err500onExc
      ,shape=box
      ,fillcolor=goldenrod
      ,style="filled,bold"];
    7 [label=findDefaultServiceIdAndTarget
      ,shape=box
      ,fillcolor=goldenrod
      ,style="filled,bold"];
    8 [label=findTargetForServiceId
      ,shape=box
      ,fillcolor=goldenrod
      ,style="filled,bold"];
    9 [label=getRqMod
      ,shape=box
      ,fillcolor=goldenrod
      ,style="filled,bold"];
    10 [label=prepareReq
       ,shape=box
       ,fillcolor=goldenrod
       ,style="filled,bold"];
    14 [label=reverseProxyHandler
       ,shape=box
       ,fillcolor=goldenrod
       ,style="filled,bold"];
    16 [label=serviceProxy
       ,shape=box
       ,fillcolor=gold
       ,style="filled,bold"];
    3 -> 12 [penwidth=1
            ,color=black];
    3 -> 13 [penwidth=1
            ,color=black];
    4 -> 1 [penwidth=1,color=black];
    4 -> 5 [penwidth=1,color=black];
    4 -> 11 [penwidth=1
            ,color=black];
    4 -> 12 [penwidth=1
            ,color=black];
    4 -> 13 [penwidth=1
            ,color=black];
    9 -> 2 [penwidth=1,color=black];
    9 -> 3 [penwidth=1,color=black];
    9 -> 7 [penwidth=1,color=black];
    9 -> 8 [penwidth=1,color=black];
    9 -> 12 [penwidth=1.6931471805599454
            ,color=black];
    10 -> 12 [penwidth=1
             ,color=black];
    11 -> 1 [penwidth=1
            ,color=magenta
            ,arrowtail=odot
            ,arrowhead=vee];
    12 -> 1 [penwidth=1
            ,color=magenta
            ,arrowtail=odot
            ,arrowhead=vee];
    13 -> 1 [penwidth=1
            ,color=magenta
            ,arrowtail=odot
            ,arrowhead=vee];
    14 -> 2 [penwidth=1
            ,color=black];
    14 -> 9 [penwidth=1
            ,color=black];
    14 -> 10 [penwidth=1
             ,color=black];
    14 -> 11 [penwidth=1
             ,color=black];
    15 -> 17 [penwidth=1
             ,color=chartreuse];
    16 -> 6 [penwidth=1
            ,color=black];
    16 -> 14 [penwidth=1
             ,color=black];
    17 -> 15 [penwidth=1
             ,color=navy
             ,dir=none];
}
