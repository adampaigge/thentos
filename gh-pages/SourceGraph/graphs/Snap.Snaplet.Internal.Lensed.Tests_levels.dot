digraph "Levels within Snap.Snaplet.Internal.Lensed.Tests" {
    node [margin="0.4,0.1"
         ,style=filled];
    subgraph "cluster_-1" {
        graph [label="Inaccessible entities"
              ,style=filled
              ,fillcolor=lavender];
        11 [label=eat
           ,shape=box
           ,fillcolor=crimson
           ,style="filled,bold"];
        12 [label=qqq
           ,shape=box
           ,fillcolor=crimson
           ,style="filled,bold"];
    }
    subgraph cluster_0 {
        graph [label="Exported root entities"
              ,style=filled
              ,fillcolor=lavender];
        16 [label=tests
           ,shape=box
           ,fillcolor=goldenrod
           ,style="filled,bold"];
    }
    subgraph cluster_1 {
        graph [label="Level = 1"
              ,style=filled
              ,fillcolor=lavender];
        13 [label=testApplicative
           ,shape=box
           ,fillcolor=bisque
           ,style="filled,bold"];
        14 [label=testMonadState
           ,shape=box
           ,fillcolor=bisque
           ,style="filled,bold"];
        15 [label=testfmap
           ,shape=box
           ,fillcolor=bisque
           ,style="filled,bold"];
    }
    subgraph cluster_2 {
        graph [label="Level = 2"
              ,style=filled
              ,fillcolor=lavender];
        1 [label="Data: TestBotType"
          ,shape=box3d
          ,fillcolor=cyan
          ,style="filled,bold"];
        2 [label="Data: TestSubType"
          ,shape=box3d
          ,fillcolor=cyan
          ,style="filled,bold"];
        3 [label="Data: TestType"
          ,shape=box3d
          ,fillcolor=cyan
          ,style="filled,bold"];
        10 [label=defaultState
           ,shape=box
           ,fillcolor=bisque
           ,style="filled,bold"];
    }
    10 -> 1 [penwidth=1
            ,color=black];
    10 -> 2 [penwidth=1
            ,color=black];
    10 -> 3 [penwidth=1
            ,color=black];
    12 -> 11 [penwidth=1
             ,color=black];
    12 -> 16 [penwidth=1
             ,color=black];
    13 -> 1 [penwidth=2.09861228866811
            ,color=black];
    13 -> 2 [penwidth=1
            ,color=black];
    13 -> 3 [penwidth=1
            ,color=black];
    13 -> 10 [penwidth=1.6931471805599454
             ,color=black];
    14 -> 1 [penwidth=1
            ,color=black];
    14 -> 2 [penwidth=2.09861228866811
            ,color=black];
    14 -> 3 [penwidth=2.09861228866811
            ,color=black];
    14 -> 10 [penwidth=1
             ,color=black];
    15 -> 1 [penwidth=2.09861228866811
            ,color=black];
    15 -> 2 [penwidth=1
            ,color=black];
    15 -> 3 [penwidth=1
            ,color=black];
    15 -> 10 [penwidth=1.6931471805599454
             ,color=black];
    16 -> 13 [penwidth=1
             ,color=black];
    16 -> 14 [penwidth=1
             ,color=black];
    16 -> 15 [penwidth=1
             ,color=black];
}
